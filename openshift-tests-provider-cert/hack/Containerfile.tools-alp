# Code generated for package assets by build-image.sh. DO NOT EDIT.
# Instead, edit the sources container files:
# hack/Containerfile.alp
# hack/Containerfile.tools-alp

#
## Sonobuoy
#
FROM ${CONTAINER_SONOBUOY_MIRROR} as sonobuoy

#
## Base image
#
FROM ${CONTAINER_BASE} as base

# gcompat: allow to run glibc programs (oc and jq)
# sononbuoy is already built with musl
RUN microdnf install -y bash curl grep tar xz gzip && \
    microdnf clean all

FROM base as clients
WORKDIR /clients

ADD https://mirror.openshift.com/pub/openshift-v4/amd64/clients/ocp/${VERSION_OC}/openshift-client-linux.tar.gz ./
ADD https://github.com/jqlang/jq/releases/download/jq-1.4/jq-linux-x86_64 ./
ADD https://github.com/elmiko/camgi.rs/releases/download/v0.9.0/camgi-0.9.0-linux-x86_64.tar ./
RUN microdnf install -y binutils \
    && tar xvfz openshift-client-linux.tar.gz \
    && rm -f openshift-client-linux.tar.gz kubectl README.md \
    && tar xvf camgi-0.9.0-linux-x86_64.tar && rm camgi-0.9.0-linux-x86_64.tar \
    && chmod +x jq-linux-x86_64 oc camgi \
    && strip oc && strip camgi

#
## ocp-etcd-log-filters builder
#
FROM ${CONTAINER_BASE_GOBUILD} as oelf-builder

COPY cmd/ocp-etcd-log-filters/*.go $GOPATH/src/github.com/opct/plugins/
WORKDIR $GOPATH/src/github.com/opct/plugins/
ADD cmd/ocp-etcd-log-filters/*.go .
RUN go build -ldflags="-s -w" \
    -o /usr/bin/ocp-etcd-log-filters *.go

#
## Tools image
#
FROM base
LABEL io.k8s.display-name="OpenShift Tests for Provider Certification Tools" \
      io.k8s.description="OpenShift is a platform for developing, building, and deploying containerized applications." \
      io.openshift.tags="openshift,tests,e2e,partner,certification,tools"
WORKDIR /tools
COPY --from=sonobuoy /sonobuoy /usr/bin/
COPY --from=clients /clients/oc /usr/bin/
COPY --from=clients /clients/jq-linux-x86_64 /usr/bin/jq
COPY --from=clients /clients/camgi /usr/bin/camgi
COPY --from=oelf-builder /usr/bin/ocp-etcd-log-filters /usr/bin/
RUN ln -svf /usr/bin/oc /usr/bin/kubectl

RUN rm -rf /var/cache/apk/*
